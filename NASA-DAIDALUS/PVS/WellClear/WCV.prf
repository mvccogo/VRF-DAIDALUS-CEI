(WCV
 (WCV_symmetric 0
  (WCV_symmetric-1 nil 3606219933
   ("" (expand "WCV_symmetric?")
    (("" (skeep*)
      (("" (expand "WCV")
        (("" (rewrite "vect2_neg")
          (("" (rewrite "vect2_neg")
            (("" (rewrite "vz_neg")
              (("" (rewrite "vz_neg")
                (("" (rewrite "vertical_WCV_symm" :dir rl)
                  (("" (rewrite "horizontal_WCV_symm" :dir rl) nil
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((TRUE const-decl "bool" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (real nonempty-type-from-decl nil reals nil)
    (vect2_neg formula-decl nil vect_3D_2D "vectors/")
    (Vector type-eq-decl nil vectors_3D "vectors/")
    (vz_neg formula-decl nil vectors_3D "vectors/")
    (minus_real_is_real application-judgement "real" reals nil)
    (vertical_WCV_symm formula-decl nil vertical_WCV nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (TCOA formal-const-decl "nnreal" WCV nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (ZTHR formal-const-decl "posreal" WCV nil)
    (horizontal_WCV_symm formula-decl nil horizontal_WCV nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (timevar? const-decl "bool" timevars nil)
    (TimeVar type-eq-decl nil timevars nil)
    (TTHR formal-const-decl "nnreal" WCV nil)
    (DTHR formal-const-decl "posreal" WCV nil)
    (WCV const-decl "bool" WCV nil)
    (WCV_symmetric? const-decl "bool" WCV nil))
   nil))
 (WCV_inclusion_trans 0
  (WCV_inclusion_trans-1 nil 3625247448
   ("" (skeep)
    (("" (expand "WCV_inclusion?")
      (("" (skeep)
        (("" (insteep -) (("" (insteep -) (("" (assert) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((WCV_inclusion? const-decl "bool" WCV nil)
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (real nonempty-type-from-decl nil reals nil))
   shostak))
 (WCV_inclusion 0
  (WCV_inclusion-1 nil 3606293025
   ("" (expand "WCV_inclusion?")
    (("" (skeep*)
      (("" (expand "WCV")
        (("" (flatten)
          (("" (assert)
            (("" (lemma "horizontal_WCV_incl")
              (("" (inst -1 "s" "v" "tvar2" "tvar1")
                (("" (assert) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((TRUE const-decl "bool" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (DTHR formal-const-decl "posreal" WCV nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (TTHR formal-const-decl "nnreal" WCV nil)
    (nnreal type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (horizontal_WCV_incl formula-decl nil horizontal_WCV nil)
    (pre_timevar? const-decl "bool" horizontal_WCV nil)
    (TimeVar type-eq-decl nil timevars nil)
    (timevar? const-decl "bool" timevars nil)
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (WCV const-decl "bool" WCV nil)
    (WCV_inclusion? const-decl "bool" WCV nil))
   shostak))
 (WCV_interval_TCC1 0
  (WCV_interval_TCC1-1 nil 3625239644
   ("" (skosimp*) (("" (assert) nil nil)) nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (WCV_interval_TCC2 0
  (WCV_interval_TCC2-1 nil 3625239644
   ("" (skosimp*) (("" (assert) nil nil)) nil)
   ((real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (WCV_interval_TCC3 0
  (WCV_interval_TCC3-1 nil 3625239644
   ("" (skosimp*) (("" (assert) nil nil)) nil)
   ((real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (WCV_interval_TCC4 0
  (WCV_interval_TCC4-1 nil 3625239644
   ("" (skosimp*) (("" (assert) nil nil)) nil)
   ((real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (WCV_interval_TCC5 0
  (WCV_interval_TCC5-1 nil 3625239644
   ("" (skosimp*) (("" (assert) nil nil)) nil)
   ((real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (WCV_interval_TCC6 0
  (WCV_interval_TCC6-1 nil 3625239644
   ("" (skosimp*) (("" (assert) nil nil)) nil)
   ((real_minus_real_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (WCV_interval_TCC7 0
  (WCV_interval_TCC7-1 nil 3625239644
   ("" (skosimp*)
    (("" (hide 2)
      (("" (expand "vertical_WCV_interval") (("" (grind) nil nil))
        nil))
      nil))
    nil)
   ((nonzero_abs_is_pos application-judgement "{y: posreal | y >= x}"
     real_defs nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (+ const-decl "Vector" vectors_2D "vectors/")
    (* const-decl "Vector" vectors_2D "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (vertical_WCV_interval const-decl "EntryExit[B, T]" vertical_WCV
     nil))
   nil))
 (WCV_interval_TCC8 0
  (WCV_interval_TCC8-1 nil 3625239644
   ("" (skosimp*)
    (("" (hide 2)
      (("" (expand "vertical_WCV_interval") (("" (grind) nil nil))
        nil))
      nil))
    nil)
   ((nonzero_abs_is_pos application-judgement "{y: posreal | y >= x}"
     real_defs nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (+ const-decl "Vector" vectors_2D "vectors/")
    (* const-decl "Vector" vectors_2D "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (vertical_WCV_interval const-decl "EntryExit[B, T]" vertical_WCV
     nil))
   nil))
 (WCV_interval_sound 0
  (WCV_interval_sound-1 nil 3625562304
   ("" (skeep)
    (("" (typepred "hi")
      (("" (assert)
        (("" (name "Wi" "WCV_interval(tvar, hi)(B, T, s, v)")
          (("" (replace -1)
            (("" (expand "WCV_interval")
              (("" (lift-if)
                (("" (split -)
                  (("1" (flatten)
                    (("1" (assert)
                      (("1" (replaces -2 :dir rl)
                        (("1" (assert)
                          (("1" (expand "nonempty?")
                            (("1" (lemma "vertical_WCV_interval_def")
                              (("1"
                                (inst?)
                                (("1"
                                  (assert)
                                  (("1"
                                    (skeep)
                                    (("1"
                                      (inst - "t")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand "WCV")
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (expand
                                               "vertical_WCV_at")
                                              (("1"
                                                (rewrite
                                                 "vz_distr_add")
                                                (("1"
                                                  (rewrite "vz_scal")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (flatten)
                    (("2" (split -)
                      (("1" (flatten)
                        (("1" (assert)
                          (("1" (replace -3 :dir rl)
                            (("1" (assert)
                              (("1"
                                (expand "nonempty?")
                                (("1"
                                  (assert)
                                  (("1"
                                    (skeep)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (split 2)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (lemma
                                             "vertical_WCV_interval_def")
                                            (("1"
                                              (inst?)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (inst - "t")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand "WCV" -3)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (expand
                                                           "vertical_WCV_at")
                                                          (("1"
                                                            (rewrite
                                                             "vz_distr_add")
                                                            (("1"
                                                              (rewrite
                                                               "vz_scal")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (ground)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (flatten)
                                          (("2"
                                            (expand "WCV" 1)
                                            (("2"
                                              (split 1)
                                              (("1"
                                                (rewrite "vect2_add")
                                                (("1"
                                                  (rewrite
                                                   "vect2_scal")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (lemma
                                                 "vertical_WCV_interval_def")
                                                (("2"
                                                  (inst?)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (inst - "t")
                                                      (("2"
                                                        (expand
                                                         "vertical_WCV_at")
                                                        (("2"
                                                          (rewrite
                                                           "vz_distr_add")
                                                          (("2"
                                                            (rewrite
                                                             "vz_scal")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (ground)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (flatten)
                        (("2" (assert)
                          (("2" (split -)
                            (("1" (flatten)
                              (("1"
                                (lift-if)
                                (("1"
                                  (split -)
                                  (("1"
                                    (flatten)
                                    (("1" (assert) nil nil))
                                    nil)
                                   ("2"
                                    (flatten)
                                    (("2"
                                      (assert)
                                      (("2"
                                        (replace -1 :dir rl)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (expand "nonempty?")
                                            (("2"
                                              (skeep)
                                              (("2"
                                                (expand "WCV")
                                                (("2"
                                                  (flatten)
                                                  (("2"
                                                    (lemma
                                                     "vertical_WCV_interval_def")
                                                    (("2"
                                                      (inst?)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (inst - "t")
                                                          (("2"
                                                            (expand
                                                             "vertical_WCV_at")
                                                            (("2"
                                                              (rewrite
                                                               "vz_distr_add")
                                                              (("2"
                                                                (rewrite
                                                                 "vz_scal")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (rewrite
                                                                       "vect2_add")
                                                                      (("2"
                                                                        (rewrite
                                                                         "vect2_scal")
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (flatten)
                              (("2"
                                (assert)
                                (("2"
                                  (hide 2)
                                  (("2"
                                    (name
                                     "GI"
                                     "hi(vertical_WCV_interval(B, T, s`z, v`z)`exit -
                  vertical_WCV_interval(B, T, s`z, v`z)`entry,
                 vect2(s) +
                  vertical_WCV_interval(B, T, s`z, v`z)`entry * vect2(v),
                 vect2(v))")
                                    (("2"
                                      (replace -1)
                                      (("2"
                                        (replaces -2 :dir rl)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (expand "nonempty?")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (split +)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (skeep)
                                                    (("1"
                                                      (split +)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand
                                                             "WCV")
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (rewrite
                                                                 "vect2_add")
                                                                (("1"
                                                                  (rewrite
                                                                   "vect2_scal")
                                                                  (("1"
                                                                    (rewrite
                                                                     "vz_distr_add")
                                                                    (("1"
                                                                      (rewrite
                                                                       "vz_scal")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (copy
                                                                           -6)
                                                                          (("1"
                                                                            (expand
                                                                             "horizontal_interval_sound?"
                                                                             -1)
                                                                            (("1"
                                                                              (inst?)
                                                                              (("1"
                                                                                (replace
                                                                                 -6)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "nonempty?")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -2)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "t-vertical_WCV_interval(B, T, s`z, v`z)`entry")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   -2)
                                                                                                  (("1"
                                                                                                    (invoke
                                                                                                     (case
                                                                                                      "NOT %1")
                                                                                                     (!
                                                                                                      -1
                                                                                                      1))
                                                                                                    (("1"
                                                                                                      (ground)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (replaces
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (hide-all-but
                                                                                                         (-2
                                                                                                          1))
                                                                                                        (("2"
                                                                                                          (grind
                                                                                                           :exclude
                                                                                                           ("horizontal_WCV"
                                                                                                            "vertical_WCV_interval"))
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (split
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "vertical_WCV_interval_def")
                                                                                                      (("1"
                                                                                                        (inst?)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "t")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "vertical_WCV_at")
                                                                                                              (("1"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "vertical_WCV_interval_def")
                                                                                                      (("2"
                                                                                                        (inst?)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "t")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "vertical_WCV_at")
                                                                                                              (("2"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (expand
                                                             "WCV"
                                                             1)
                                                            (("2"
                                                              (rewrite
                                                               "vect2_add")
                                                              (("2"
                                                                (rewrite
                                                                 "vect2_scal")
                                                                (("2"
                                                                  (rewrite
                                                                   "vz_distr_add")
                                                                  (("2"
                                                                    (rewrite
                                                                     "vz_scal")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (split
                                                                         1)
                                                                        (("1"
                                                                          (copy
                                                                           -4)
                                                                          (("1"
                                                                            (expand
                                                                             "horizontal_interval_sound?"
                                                                             -1)
                                                                            (("1"
                                                                              (inst?)
                                                                              (("1"
                                                                                (replace
                                                                                 -4)
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "nonempty?")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -2)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "t-vertical_WCV_interval(B, T, s`z, v`z)`entry")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (ground)
                                                                                                    (("1"
                                                                                                      (replaces
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (hide-all-but
                                                                                                         (-1
                                                                                                          1))
                                                                                                        (("1"
                                                                                                          (grind
                                                                                                           :exclude
                                                                                                           ("horizontal_WCV"
                                                                                                            "vertical_WCV_interval"))
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (replaces
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (hide-all-but
                                                                                                         (-1
                                                                                                          1))
                                                                                                        (("2"
                                                                                                          (grind
                                                                                                           :exclude
                                                                                                           ("horizontal_WCV"
                                                                                                            "vertical_WCV_interval"))
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (split
                                                                                                 +)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (split
                                                                             -)
                                                                            (("1"
                                                                              (typepred
                                                                               "GI`entry")
                                                                              (("1"
                                                                                (both-sides
                                                                                 " +"
                                                                                 "vertical_WCV_interval(B, T, s`z, v`z)`entry"
                                                                                 -1)
                                                                                (("1"
                                                                                  (both-sides
                                                                                   " +"
                                                                                   "vertical_WCV_interval(B, T, s`z, v`z)`entry"
                                                                                   -2)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -3
                                                                                     :dir
                                                                                     rl)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "vertical_WCV_interval_def")
                                                                                        (("1"
                                                                                          (inst?)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "t")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "vertical_WCV_at")
                                                                                                  (("1"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (typepred
                                                                               "GI`exit")
                                                                              (("2"
                                                                                (both-sides
                                                                                 " +"
                                                                                 "vertical_WCV_interval(B, T, s`z, v`z)`entry"
                                                                                 -1)
                                                                                (("2"
                                                                                  (both-sides
                                                                                   " +"
                                                                                   "vertical_WCV_interval(B, T, s`z, v`z)`entry"
                                                                                   -2)
                                                                                  (("2"
                                                                                    (replace
                                                                                     -3
                                                                                     :dir
                                                                                     rl)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "vertical_WCV_interval_def")
                                                                                        (("2"
                                                                                          (inst?)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "t")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "vertical_WCV_at")
                                                                                                  (("2"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (skeep)
                                                    (("2"
                                                      (expand "WCV")
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (copy -4)
                                                          (("2"
                                                            (expand
                                                             "horizontal_interval_sound?"
                                                             -1)
                                                            (("2"
                                                              (inst?)
                                                              (("2"
                                                                (replace
                                                                 -4)
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (expand
                                                                         "nonempty?")
                                                                        (("2"
                                                                          (inst
                                                                           +
                                                                           "t-vertical_WCV_interval(B, T, s`z, v`z)`entry")
                                                                          (("1"
                                                                            (hide-all-but
                                                                             (-1
                                                                              1))
                                                                            (("1"
                                                                              (grind
                                                                               :exclude
                                                                               ("horizontal_WCV"
                                                                                "vertical_WCV_interval"))
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (lemma
                                                                               "vertical_WCV_interval_def")
                                                                              (("2"
                                                                                (inst?)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "t")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "vertical_WCV_at")
                                                                                      (("2"
                                                                                        (rewrite
                                                                                         "vz_distr_add")
                                                                                        (("2"
                                                                                          (rewrite
                                                                                           "vz_scal")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((horizontal_interval_sound? const-decl "bool" horizontal_WCV nil)
    (HorizontalInterval type-eq-decl nil horizontal_WCV nil)
    (DTHR formal-const-decl "posreal" WCV nil)
    (TTHR formal-const-decl "nnreal" WCV nil)
    (nnreal type-eq-decl nil real_types nil)
    (EntryExit type-eq-decl nil EntryExit_interval nil)
    (Lookahead type-eq-decl nil Lookahead "ACCoRD/")
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (TimeVar type-eq-decl nil timevars nil)
    (timevar? const-decl "bool" timevars nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (real nonempty-type-from-decl nil reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (WCV_interval const-decl "EntryExit[B, T]" WCV nil)
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (= const-decl "[T, T -> boolean]" equalities nil)
    (< const-decl "bool" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (vertical_WCV_interval_def formula-decl nil vertical_WCV nil)
    (TCOA formal-const-decl "nnreal" WCV nil)
    (ZTHR formal-const-decl "posreal" WCV nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (WCV const-decl "bool" WCV nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (vertical_WCV_at const-decl "bool" vertical_WCV nil)
    (vz_scal formula-decl nil vectors_3D "vectors/")
    (real_plus_real_is_real application-judgement "real" reals nil)
    (vz_distr_add formula-decl nil vectors_3D "vectors/")
    (Vector type-eq-decl nil vectors_3D "vectors/")
    (* const-decl "Vector" vectors_3D "vectors/")
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nonempty? const-decl "bool" EntryExit_interval nil)
    (TRUE const-decl "bool" booleans nil)
    (vect2_scal formula-decl nil vect_3D_2D "vectors/")
    (vect2_add formula-decl nil vect_3D_2D "vectors/")
    (t skolem-const-decl "Lookahead[B, T]" WCV nil)
    (+ const-decl "Vector" vectors_3D "vectors/")
    (B skolem-const-decl "nnreal" WCV nil)
    (T skolem-const-decl "{T | B < T}" WCV nil)
    (t skolem-const-decl "Lookahead[B, T]" WCV nil)
    (s skolem-const-decl "Vect3" WCV nil)
    (v skolem-const-decl "Vect3" WCV nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nonzero_abs_is_pos application-judgement "{y: posreal | y >= x}"
     real_defs nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (both_sides_plus_le1 formula-decl nil real_props nil)
    (both_sides_plus_ge1 formula-decl nil real_props nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (vertical_WCV_interval const-decl "EntryExit[B, T]" vertical_WCV
     nil)
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (+ const-decl "Vector" vectors_2D "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (* const-decl "Vector" vectors_2D "vectors/")
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil))
 (WCV_interval_correct 0
  (WCV_interval_correct-1 nil 3625239827
   ("" (skeep*)
    (("" (skoletin*)
      (("" (expand "WCV_interval")
        (("" (lift-if)
          (("" (split -)
            (("1" (flatten)
              (("1" (assert)
                (("1" (replaces (-2 -3 -4))
                  (("1" (assert)
                    (("1" (invoke (case "%1") (! 1 2))
                      (("1" (ground) nil nil)
                       ("2" (replaces 1)
                        (("2" (assert)
                          (("2" (expand "WCV")
                            (("2" (flatten)
                              (("2"
                                (lemma "vertical_WCV_interval_def")
                                (("2"
                                  (inst?)
                                  (("2"
                                    (assert)
                                    (("2"
                                      (inst - "t")
                                      (("2"
                                        (expand "vertical_WCV_at")
                                        (("2"
                                          (rewrite "vz_distr_add")
                                          (("2"
                                            (rewrite "vz_scal")
                                            (("2"
                                              (replace -4)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (flatten)
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (flatten)
              (("2" (assert)
                (("2" (split -)
                  (("1" (flatten)
                    (("1" (invoke (name "tz" "%1") (! -1 1))
                      (("1" (replace -1)
                        (("1" (split +)
                          (("1" (flatten)
                            (("1" (case "t = tz")
                              (("1" (assert) nil nil)
                               ("2"
                                (expand "WCV" -1)
                                (("2"
                                  (flatten)
                                  (("2"
                                    (lemma "vertical_WCV_interval_def")
                                    (("2"
                                      (inst?)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (inst - "t")
                                          (("2"
                                            (expand "vertical_WCV_at")
                                            (("2"
                                              (rewrite "vz_distr_add")
                                              (("2"
                                                (rewrite "vz_scal")
                                                (("2"
                                                  (replace -3)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (flatten)
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (flatten)
                            (("2" (expand "WCV" 1)
                              (("2"
                                (rewrite "vect2_add")
                                (("2"
                                  (rewrite "vect2_scal")
                                  (("2"
                                    (assert)
                                    (("2"
                                      (lemma
                                       "vertical_WCV_interval_def")
                                      (("2"
                                        (inst?)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (inst - "t")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (expand
                                                 "vertical_WCV_at")
                                                (("2"
                                                  (rewrite
                                                   "vz_distr_add")
                                                  (("2"
                                                    (rewrite "vz_scal")
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (flatten)
                    (("2" (split -)
                      (("1" (flatten)
                        (("1" (assert)
                          (("1" (assert)
                            (("1" (replaces -2)
                              (("1"
                                (replaces -2)
                                (("1"
                                  (replaces -2)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (invoke (case "%1") (! 3 2))
                                      (("1" (ground) nil nil)
                                       ("2"
                                        (replaces 1)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (expand "WCV")
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (lemma
                                                 "vertical_WCV_interval_def")
                                                (("2"
                                                  (inst?)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (inst - "t")
                                                      (("2"
                                                        (expand
                                                         "vertical_WCV_at")
                                                        (("2"
                                                          (rewrite
                                                           "vz_distr_add")
                                                          (("2"
                                                            (rewrite
                                                             "vz_scal")
                                                            (("2"
                                                              (replace
                                                               -4)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (rewrite
                                                                     "vect2_add")
                                                                    (("2"
                                                                      (rewrite
                                                                       "vect2_scal")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (flatten)
                        (("2" (assert)
                          (("2" (hide 2)
                            (("2"
                              (name "vni"
                                    "vertical_WCV_interval(B, T, s`z, v`z)")
                              (("2"
                                (replace -1)
                                (("2"
                                  (name
                                   "hni"
                                   " hi(vni`exit - vni`entry, vect2(s) + vni`entry * vect2(v),
                                            vect2(v))")
                                  (("1"
                                    (replace -1)
                                    (("1"
                                      (replaces -3)
                                      (("1"
                                        (replaces -3)
                                        (("1"
                                          (replaces -3)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (split +)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand "WCV")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (lemma
                                                         "vertical_WCV_interval_def")
                                                        (("1"
                                                          (inst?)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (inst
                                                               -
                                                               "t")
                                                              (("1"
                                                                (expand
                                                                 "vertical_WCV_at")
                                                                (("1"
                                                                  (rewrite
                                                                   "vz_distr_add")
                                                                  (("1"
                                                                    (rewrite
                                                                     "vz_scal")
                                                                    (("1"
                                                                      (replace
                                                                       -3)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (replace
                                                                           -5)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (typepred
                                                                               "hi")
                                                                              (("1"
                                                                                (expand
                                                                                 "horizontal_interval_correct?")
                                                                                (("1"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "t-vni`entry")
                                                                                    (("1"
                                                                                      (replace
                                                                                       -6)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (hide
                                                                                             -2)
                                                                                            (("1"
                                                                                              (split
                                                                                               -)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (case
                                                                                                 "vect2(s) + vni`entry * vect2(v) +
                                                                                                                                 (t - vni`entry) * vect2(v) = vect2(s + t * v)")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide-all-but
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (expand "WCV")
                                                  (("2"
                                                    (split +)
                                                    (("1"
                                                      (lemma
                                                       "vertical_WCV_interval_def")
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (inst
                                                             -
                                                             "t")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (typepred
                                                                 "hi")
                                                                (("1"
                                                                  (expand
                                                                   "horizontal_interval_correct?")
                                                                  (("1"
                                                                    (inst?)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "t-vni`entry")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (case
                                                                           "vect2(s) + vni`entry * vect2(v) +
                                                                                                                       (t - vni`entry) * vect2(v) = vect2(s + t * v)")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (lemma
                                                       "vertical_WCV_interval_def")
                                                      (("2"
                                                        (inst?)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (inst
                                                             -
                                                             "t")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (hide-all-but
                                                                 (-1
                                                                  1))
                                                                (("2"
                                                                  (grind
                                                                   :exclude
                                                                   "vertical_WCV")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((IFF const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (< const-decl "bool" reals nil)
    (Lookahead type-eq-decl nil Lookahead "ACCoRD/")
    (EntryExit type-eq-decl nil EntryExit_interval nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (timevar? const-decl "bool" timevars nil)
    (TimeVar type-eq-decl nil timevars nil)
    (TTHR formal-const-decl "nnreal" WCV nil)
    (DTHR formal-const-decl "posreal" WCV nil)
    (HorizontalInterval type-eq-decl nil horizontal_WCV nil)
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (WCV_interval const-decl "EntryExit[B, T]" WCV nil)
    (horizontal_interval_correct? const-decl "bool" horizontal_WCV nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil) (WCV const-decl "bool" WCV nil)
    (Vector type-eq-decl nil vectors_3D "vectors/")
    (+ const-decl "Vector" vectors_3D "vectors/")
    (* const-decl "Vector" vectors_3D "vectors/")
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (vertical_WCV_interval const-decl "EntryExit[B, T]" vertical_WCV
     nil)
    (vect2_scal formula-decl nil vect_3D_2D "vectors/")
    (vect2_add formula-decl nil vect_3D_2D "vectors/")
    (real_minus_real_is_real application-judgement "real" reals nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (+ const-decl "Vector" vectors_2D "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (* const-decl "Vector" vectors_2D "vectors/")
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (nonzero_abs_is_pos application-judgement "{y: posreal | y >= x}"
     real_defs nil)
    (vni skolem-const-decl "EntryExit[B, T]" WCV nil)
    (t skolem-const-decl "Lookahead[B, T]" WCV nil)
    (T skolem-const-decl "{T | B < T}" WCV nil)
    (B skolem-const-decl "nnreal" WCV nil)
    (vz_distr_add formula-decl nil vectors_3D "vectors/")
    (real_plus_real_is_real application-judgement "real" reals nil)
    (vz_scal formula-decl nil vectors_3D "vectors/")
    (vertical_WCV_at const-decl "bool" vertical_WCV nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (ZTHR formal-const-decl "posreal" WCV nil)
    (TCOA formal-const-decl "nnreal" WCV nil)
    (vertical_WCV_interval_def formula-decl nil vertical_WCV nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil))
 (WCV_detection_TCC1 0
  (WCV_detection_TCC1-1 nil 3625243253 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (timevar? const-decl "bool" timevars nil)
    (TimeVar type-eq-decl nil timevars nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (* const-decl "real" vectors_2D "vectors/")
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil))
 (WCV_detection_correct 0
  (WCV_detection_correct-1 nil 3625245575
   ("" (skeep)
    (("" (expand "WCV_detection")
      (("" (lemma "WCV_interval_correct")
        (("" (insteep -1 :but "t")
          (("" (split 1)
            (("1" (flatten)
              (("1"
                (inst -2 "WCV_interval(tvar, hi)(B, T, s, v)`entry")
                (("1" (assert) (("1" (inst? 1) nil nil)) nil)) nil))
              nil)
             ("2" (flatten)
              (("2" (skeep -1)
                (("2" (insteep -2)
                  (("2" (assert)
                    (("2" (flatten) (("2" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((WCV_detection const-decl "bool" WCV nil)
    (horizontal_interval_correct? const-decl "bool" horizontal_WCV nil)
    (HorizontalInterval type-eq-decl nil horizontal_WCV nil)
    (DTHR formal-const-decl "posreal" WCV nil)
    (TTHR formal-const-decl "nnreal" WCV nil)
    (EntryExit type-eq-decl nil EntryExit_interval nil)
    (Lookahead type-eq-decl nil Lookahead "ACCoRD/")
    (TimeVar type-eq-decl nil timevars nil)
    (timevar? const-decl "bool" timevars nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (< const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (nnreal type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (WCV_interval const-decl "EntryExit[B, T]" WCV nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (WCV_interval_correct formula-decl nil WCV nil))
   nil))
 (WCV_locally_convex 0
  (WCV_locally_convex-1 nil 3625240294
   ("" (expand "WCV_locally_convex?")
    (("" (skeep*)
      (("" (lemma "WCV_interval_correct")
        (("" (insteep :but ("t"))
          (("" (inst-cp -1 "t1")
            (("" (inst-cp -1 "t2")
              (("" (inst -1 "t3")
                (("" (assert)
                  (("" (assert)
                    (("" (flatten) (("" (assert) nil nil)) nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((TRUE const-decl "bool" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (< const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (timevar? const-decl "bool" timevars nil)
    (TimeVar type-eq-decl nil timevars nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (Lookahead type-eq-decl nil Lookahead "ACCoRD/")
    (EntryExit type-eq-decl nil EntryExit_interval nil)
    (nnreal type-eq-decl nil real_types nil)
    (TTHR formal-const-decl "nnreal" WCV nil)
    (DTHR formal-const-decl "posreal" WCV nil)
    (HorizontalInterval type-eq-decl nil horizontal_WCV nil)
    (horizontal_interval_correct? const-decl "bool" horizontal_WCV nil)
    (tvar skolem-const-decl "TimeVar" WCV nil)
    (hi skolem-const-decl "HorizontalInterval[TTHR, DTHR]" WCV nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (WCV_interval_correct formula-decl nil WCV nil)
    (WCV_locally_convex? const-decl "bool" WCV nil))
   nil)))

