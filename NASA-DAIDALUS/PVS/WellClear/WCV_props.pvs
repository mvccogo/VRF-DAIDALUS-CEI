WCV_props : THEORY
BEGIN

  IMPORTING WCV,
            vertical_WCV_props

  B	  : VAR nnreal
  T	  : VAR posreal
  TTHR    : VAR nnreal
  DTHR,
  ZTHR    : VAR posreal
  tcoa1,
  tcoa2   : VAR nnreal
  s,v     : VAR Vect3
  tvar    : VAR TimeVar

  wcv_entry_tcoa_nonempty : LEMMA B < T AND tcoa1 <= tcoa2 IMPLIES
    FORALL (hi:(horizontal_interval_correct?[TTHR,DTHR](tvar))):
      LET interval_tcoa1 = WCV_interval[TTHR,tcoa1,DTHR,ZTHR](tvar,hi)(B,T,s,v),
          interval_tcoa2 = WCV_interval[TTHR,tcoa2,DTHR,ZTHR](tvar,hi)(B,T,s,v),
	  delta = interval_tcoa1`entry-interval_tcoa2`entry IN
      nonempty?(interval_tcoa1) IMPLIES
      nonempty?(interval_tcoa2) AND
      interval_tcoa2`entry >= 0 AND
      nonempty?(vertical_WCV_interval[tcoa1,ZTHR](B,T,s`z,v`z)) AND
      delta >= 0

  wcv_entry_tcoa_leq_lem : LEMMA B < T AND tcoa1 <= tcoa2 IMPLIES
    FORALL (hi:(horizontal_interval_correct?[TTHR,DTHR](tvar))):
      LET interval_tcoa1 = WCV_interval[TTHR,tcoa1,DTHR,ZTHR](tvar,hi)(B,T,s,v),
          interval_tcoa2 = WCV_interval[TTHR,tcoa2,DTHR,ZTHR](tvar,hi)(B,T,s,v),
	  delta = interval_tcoa1`entry-interval_tcoa2`entry IN
      nonempty?(interval_tcoa1) AND
      nonempty?(interval_tcoa2) AND
      interval_tcoa2`entry >= 0 AND
      nonempty?(vertical_WCV_interval[tcoa1,ZTHR](B,T,s`z,v`z)) AND
      delta >= 0 IMPLIES  
        delta <= IF v`z = 0 THEN 0 ELSE 
                   (max(ZTHR, abs(v`z)*tcoa2) - max(ZTHR, abs(v`z)*tcoa1))/abs(v`z)
                 ENDIF

  wcv_entry_tcoa_leq : LEMMA B < T AND tcoa1 <= tcoa2 IMPLIES
    FORALL (hi:(horizontal_interval_correct?[TTHR,DTHR](tvar))):
      LET interval_tcoa1 = WCV_interval[TTHR,tcoa1,DTHR,ZTHR](tvar,hi)(B,T,s,v),
          interval_tcoa2 = WCV_interval[TTHR,tcoa2,DTHR,ZTHR](tvar,hi)(B,T,s,v),
	  delta = interval_tcoa1`entry-interval_tcoa2`entry IN
      nonempty?(interval_tcoa1) IMPLIES  
        delta <= IF v`z = 0 THEN 0 ELSE 
                   (max(ZTHR, abs(v`z)*tcoa2) - max(ZTHR, abs(v`z)*tcoa1))/abs(v`z)
                 ENDIF

END WCV_props
